The differences in sentiment expression in software engineering texts primarily arise from the domain-specific meanings of words, leading technical terms to be misinterpreted with emotional connotations in non-technical contexts. Context-sensitive variations and neutral terms used technically also contribute to inaccuracies in sentiment detection.

The paper suggests using a domain-specific approach to improve sentiment analysis in software engineering texts. It involves creating a domain-specific dictionary that accounts for technical jargon and contextual meanings that are unique to software engineering. Additionally, using heuristics tailored for this domain can further improve accuracy. These include detecting the negation scope, filtering out code snippets and URLs, and using neutralizers to recognize context-specific word meanings. These methods significantly enhance precision, recall, and overall sentiment detection performance compared to using general-purpose sentiment analysis tools, which often misinterpret technical terms in this context.

