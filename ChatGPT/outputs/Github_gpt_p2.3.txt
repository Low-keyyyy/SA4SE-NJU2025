{"text": "@christian-bromann I am interested in a code example for what you have said. Just curious here. Thanks\"", "res": "The sentiment of the given software engineering (SE) text is \"neutral\"."}
{"text": "As explained in #17  and in the previous comment there is a mistake in the PerfMetricSet class. The real data is the unit.I will close this issue because we can do nothing to fix it.\"", "res": "Negative"}
{"text": "Done. Renamed \"timestamp\" to \"freeze-date\".  I'm actually setting \"build-date\" to the actual day that the image is built because it can differ from the freezedate.", "res": "The sentiment of the given software engineering text is \"neutral\"."}
{"text": "Status.net groups were always a misguided misfeature.  Groups on status.net are just hashtags that you can follow... but properly implemented hashtags should be followable, making the extra syntax redundant and annoying.", "res": "Negative"}
{"text": "I'd like to keep the YourKit stuff out of the oae module. You can deliver a custom setenv.sh.erb template via the setenv_template param to oae::app::server   If you add the YK java arguments to localconfig/templates/oae-setenv.sh.erb then the oae module w", "res": "The sentiment of the provided software engineering text is \"neutral.\" The text primarily provides instructions related to software configuration without expressing any clear positive or negative sentiment."}
{"text": "Steps to replicate:  Log in as admin Click Vendor Click Search Vendor Click search button Click info button on vendor that has shipping as type Click profile on side panel  Expected Result:  The page should be redirected to the profile page.  Actual Result:  The page did not redirect  to profile page. The link was hashed.  Screenshot: \"", "res": "The sentiment of the given software engineering (SE) text is \"negative.\""}
{"text": "See above.", "res": "To determine the sentiment of the text \"See above,\" we would typically need more contextual information about what \"above\" refers to. However, based solely on the text provided, there is no positive or negative sentiment expressed. It is simply a directive or reference to something prior, without any emotional weight or sentiment-laden language. Thus, I would classify the sentiment of this text as \"neutral.\""}
{"text": "Comments updated", "res": "Neutral"}
{"text": "We would like to be able to queue jobs to be run after a specific point in time. It will be helpful.", "res": "Neutral"}
{"text": "Can you rename `urls_or_config_hashes` to something less verbose? I think `nodes` is fine, as it is `#add_node` that is finally concerned with what to do with the contents.", "res": "The sentiment of the given software engineering text is \"neutral\"."}
{"text": "Yes.  Good catch.  I'll add that documentation.", "res": "Positive"}
{"text": "Are you using StofDoctrineExtensionsBundle ? it seems like the user object is not in identity map of unit of work of doctrine. It would be easier if it could be reproduced. which version of symfony and doctrine orm are you using?", "res": "In the provided text, the sentiment appears to be \"neutral.\" The text consists of technical questions and observations without any words or phrases that strongly convey positive or negative sentiment. The focus is on identifying and reproducing an issue, which is fairly typical in software engineering discussions."}
{"text": "I've tried plone.batching in my dev environment but it breaks the \"standard_view\" template from plone.app.collection because it uses the oldstyle CMFPlone batch_macros ... so this has to be changed there too, before merging thisone.", "res": "The sentiment of the given software engineering text is \"negative\"."}
{"text": "I believe this expression would be easier to understand:  ```lambda stack: any('CreatePairedMinidumps' in signature for signature in stack)```  it reduces to one level of parens and drops the confusing `find` and `-1`", "res": "To determine the sentiment of the provided software engineering text, let's apply the suggested preprocessing steps and analyze the content:\n\n1. **Expanding word contractions**: This text doesn't contain any contractions that need expansion.\n\n2. **Removing URLs and code snippets**: The code snippet is crucial in understanding the sentiment of this text, so we don't remove it.\n\n3. **Handling emoticons**: There are no emoticons in the text.\n\n4. **Addressing negations, chunk grammar, and transforming emoticons**: This text doesn't include explicit negations or emoticons.\n\n5. **Excluding non-semantic stopwords and word stemming**: While not immediately necessary for this text, these processes help general preprocessing.\n\nAnalyzing the text: \n\n- The text expresses an opinion about a piece of code (`lambda stack: any('CreatePairedMinidumps' in signature for signature in stack)`). \n- The speaker says it \"would be easier to understand\" and highlights the reduction in complexity (\"reduces to one level of parens\") and removal of confusing elements (\"drops the confusing `find` and `-1`\").\n\nOverall, the speaker seems to view these changes as improvements, which indicates a positive sentiment towards the code expression they describe.\n\nTherefore, the sentiment of the text is **positive**."}
{"text": "so I think this is fine it works on master", "res": "The sentiment of the given software engineering text is \"neutral.\""}
{"text": "It would be nice to have specs for these changes, and not just in the RSpec matchers!", "res": "The sentiment of the given software engineering text is \"neutral\". The statement expresses a desire for additional information or documentation but does not convey a strong positive or negative emotion."}
{"text": "@cristiandouce yes the example works correctly for me.\"", "res": "The sentiment of the given text is \"positive\"."}
{"text": "@fengyuanchen How can we send the cropped data to server side without using the ajaxUpload method?In my case I just removed the form tag and used a section element instead. This is because I'm using it within another form tag and don't want the form to submit. I'm working on a(n) update form and found your solution as the best feature I want.\"", "res": "The sentiment of the given software engineering (SE) text is \"positive.\" The text expresses a favorable opinion about someone's solution, describing it as \"the best feature I want,\" which indicates a positive sentiment."}
{"text": "@krystov How many sync folders do you have configured?\"", "res": "Neutral"}
{"text": "We may want to call requestLayout() when setting the shadow layer as well.", "res": "The sentiment of the provided software engineering text is \"neutral\". The statement discusses a technical action without expressing a positive or negative sentiment."}
{"text": "I see your point and tend to agree. Names are but sound and smoke. I'll change it!", "res": "The sentiment of the given software engineering text is \"positive\"."}
{"text": "Well, whatever your goal is, if your run the code in a plain browser or in a sugar web activity, it is currently a different platform, for the meaning I'm giving to that word at least. The APIs you have access to are different and you somehow need to deal with that fact. That's all I meant :) Great to hear you will keep working on this.", "res": "Positive"}
{"text": "Are multiple plots with the same range supported here too?", "res": "Neutral"}
{"text": "Replace L80-83 with        this.settingGroups.splice(         this.settingGroups.indexOf(this.defaultGroup), 1);", "res": "Neutral"}
{"text": "Hi Marie, We tried with three different browsers (Chrome, Firefox and Safari) on an iMac and each one produced an sequence output. Since \"Zoom in\" is the choice right above \"Dump selection as FASTA\", is it possible that you missed the selection? If not, please provide specific parameters so that we can better reproduce the problem. Thanks. Raymond On 03/10/2015 09:17 AM, no-reply@wormbase.org wrote:Bug ReportWhen I go to \"dump a selection in FASTA\" on GBrowse all thathappens is the sequence zooms in. How do I fix this?Submitted From:support /tools/support http://www.wormbase.org//tools/supportThis issue has been assigned ticket number: #3674. Follow progress onour issue tracker #3674.Reported by: Marie (mg3088@columbia.edu)10 Mar 15 16:20Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_5) AppleWebKit/600.3.18(KHTML like Gecko) Version/7.1.3 Safari/537.85.12This question was reported via the web interface at wormbase.org. Youcan also email us mailto:help@wormbase.org directly.You received this message because you are subscribed to the \"WormBase:help\" group.To post to this group send email to help@wormbase.orgTo unsubscribe from this group send email tohelp+unsubscribe@wormbase.orgFor more options visit this group athttp://groups.google.com/a/wormbase.org/group/help?hl=enTo unsubscribe from this group and stop receiving emails from it sendan email to help+unsubscribe@wormbase.orgmailto:help+unsubscribe@wormbase.org.__Raymond Leeraymond@caltech.eduhttp://www.WormBase.org/California Institute of TechnologyDivision of Biology and Biological EngineeringMail Code 156-29Pasadena CA 91125USAtel: 626.395.2687\"", "res": "The sentiment of the given software engineering text is \"neutral\". The correspondence is purely technical and factual, addressing a bug report and seeking further information to resolve the issue. There is no expression of emotion, positive or negative, in the message."}
{"text": "I thought I will implement it by myself, but currently I have no time for it. So I just write down the idea in case somebody will like it and implement, or in case I will return back to it next year. The idea is to extend the definition of variables so the strings could be used as the access-keys in addition to integer numbers. One can think of them as std::map<string,string>, or python dictionary, or lua tables which are the closest. Possibility to use dictionaries exists also in bash/zsh, though dictionaries are distinct from ordinary variables. Why it is useful? The latest example I saw is in __terlar_git_prompt, where you need to get a color and symbol for named elements in a list: for i in $fish_prompt_git_status_order    if contains $i in $gs      echo 'set_color $fish_color_git_'$i      echo 'echo -n $fish_prompt_git_status_'$i    endend | .Where $i runs the items from the list: added modified deleted etc.If one could use variables as dictionaries this piece of code could be rewritten in the following way:for i in $fish_prompt_git_status_order    if contains $i in $gs      set_color $fish_color_git[$i]      echo -n $fish_prompt_git_status[$i]    endendWhich for me looks much nicer and simpler.How not to break the ordinary variables?That is actually very simple. The idea is almost the same as in lua tables (http://lua-users.org/wiki/TablesTutorial):If the key is number it refers to the 'array' part of the variable which is what a variables currently.If the key is a string (starts from a letter for example) it refers to the dictionary part.Dictionary part should not affect all the previous behaviour. \"$variable\" is expanded to a list of array part. 'count $variable' will print the number of elements in the array part.\"set var \" also works only with the array part.The differences comes with handling subscription:'set var[key] value' or 'set var[key1 key2] value1 value2' should be expanded to handle string keys.$var[key] or $var[$key] or $var[key1 key2] should return values which were previously set.There should also be functions for working with dictionaries like getting list of keys for iteration or getting the number of elements in dictionary part.set var[a b c] d e fecho $var  #-><nothing>count $var #->0get --size var   #-> 3get --keys var   #-> a b c get --values var #-> d e fget --pairs var  #-> a d b e c fOther issuesOne should also update universal variables handling.Dictionary part of the variables could not be exported.Thats itAny ideas/thoughts/critics are appreciated.\"", "res": "The sentiment of the provided software engineering text is \"neutral.\" The text discusses a technical proposal or idea regarding variable handling in programming, specifically in the context of using strings as access keys. The author describes how this idea could improve code simplicity and organization but does not express strong personal feelings, positive or negative, about it. The overall tone is informative and suggests that feedback or further thoughts are welcome, which is characteristic of a neutral sentiment."}
{"text": "@pmjones Yes @phpdocumentor was complaining . I discusses with @mvreil and he mentioned to add `\\StdClass` as param", "res": "The sentiment of the provided software engineering text is \"neutral.\" The text primarily describes a technical issue and a discussion between individuals without any explicit positive or negative sentiment expressed."}
{"text": "I stumbled on this behaviour a few days ago when mass importing stuff into Nikola. Looks like my example wasn't that great. My test was made with this rev: ralsina/nikola@df26537I updated to the latest version from github (master) now.I tried again with setting up the demo site and then going through my steps descriped above.To make it clearly different from the first post I did not only change the date but also the url title and tags aswell removed the source before buildingWhen running doit I am not seeing the build of a new archive (overview) page. Neither is a new tag overview generated.\"", "res": "The sentiment of the provided software engineering text appears to be \"neutral.\" The text describes a sequence of actions and observations while trying to address a technical issue. It does not express strong positive or negative emotions, and it seems more focused on factual reporting of the user's experience."}
{"text": "Actually the indentation is not possible here because I used some white spaces to indent the XSLT output. This is a general XLST file to convert a docBook structure in reStructuredText format. I used the XSLT syntax + the special template php:function() u", "res": "The sentiment of the given software engineering text is \"neutral.\" The text primarily describes technical details and challenges without expressing any overtly positive or negative sentiment."}
{"text": "I like it. :ok_hand:", "res": "Positive"}
{"text": "Analysis: The pattern match failure is no big deal, but it cannot be fixed until the second issue is fixed. The second issue is a bit more serious. The ILAst after the last ILAst transform is as follows: finally {     stloc:IDisposable(var_2_2F, isinst:IDisposable([mscorlib]System.IDisposable, ldloc:IEnumerator(var_1)))     if (logicnot(ldloc:IDisposable[exp:bool](var_2_2F))) {         endfinally()     } else {     }      callvirt:void(IDisposable::Dispose, ldloc:IDisposable(var_2_2F))     endfinally() }  That code is technically correct, but it cannot easily be transformed into a C# AST without introducing an unnecessary goto, since C# provides no mechanism for leaving a finally block other than by falling through the bottom. I tested some other code, and have found that pretty much every case involving more than one endfinally in a finally block can cause similar problems. I have further checked the code, and endfinally is simply dropped on conversion to the C# AST, which is only valid if it is the last statement in the finally block. With that in mind, the best fix that I can see is to create a special basic block consisting of only a label and an endfinally(), and replace the endfinally() calls in other basic blocks with a branch to this block. (Do not forget that endfinally() can take arguments with side effects which may need to become stand-alone expressions). The new endfinally basic block cannot be incorporated into a loop or conditional structure, and must be the very last basic block merged into the flattened block. This is to ensure that it will be the last instruction in the finally block so that the C# code has execution just fall out the bottom of the finally block. The above would not need to be done with any finally block that does not contain an endfinally, which is permissible if it always either does not terminate or throws an exception. (All of this would also apply to fault blocks.)", "res": "Neutral"}
{"text": "I really like how you have refactored this method!", "res": "Positive"}
{"text": "This IS a MessagSource, so yes RedisStoreMessageSource is the right name. The SPCA is the adapter, delegating to a source.  The AmqpInboundChannelAdapter is different. It's an active component (not polled) that extends MessageProducerSupport so it has the", "res": "The sentiment of the provided software engineering text is \"neutral.\" The text primarily consists of technical jargon and factual information without any clear expression of positive or negative sentiment."}
{"text": "If we're not using puppet, is this line necessary?", "res": "neutral"}
{"text": "It tries to set item name and that doesn't exist there.", "res": "Negative"}
{"text": "I think we should use of a sekizai tag here to provide the css resources so that the style is available in any cms page.", "res": "To determine the sentiment of the provided software engineering text, let's analyze it:\n\n- The sentence is a suggestion about using a \"sekizai tag\" to provide CSS resources in CMS pages.\n- There is no explicit emotional context, strong subjective language, or indicators of either positive or negative sentiment.\n- The language is technical and objective, focusing on a possible implementation solution without any personal opinion or emotional expression.\n\nConsidering the analysis above, the sentiment of the text can be categorized as \"neutral.\""}
{"text": "+1 too", "res": "The sentiment of the provided software engineering text is \"positive\". The text contains \"+1\", which is commonly used in technical discussions, such as code reviews or online platforms, to express agreement or approval."}
{"text": "worth sending this to crew or techteam?", "res": "Neutral"}
{"text": "[comment from ncanna...@gmail.comYes it's r4712\"", "res": "To determine the sentiment of the given software engineering text, let's apply the suggested preprocessing steps:\n\n1. **Expanding contractions**: The text doesn't contain contractions.\n2. **Removing URLs and code snippets**: There are no URLs or code snippets to remove.\n3. **Handling emoticons**: There are no emoticons present.\n4. **Addressing negations**: The word \"Yes\" is a positive affirmation, but there's no negation structure to modify.\n5. **Excluding non-semantic stopwords**: There aren't any typical non-semantic stopwords that affect sentiment.\n6. **Word stemming**: Not applicable as there's no word to stem that affects meaning.\n\nAfter preprocessing, the text remains identical: \"[comment from ncanna...@gmail.com Yes it's r4712\"\"\n\nThe key sentiment-related component here is \"Yes,\" which typically conveys a positive acknowledgment or confirmation. However, in this context, there is no additional sentiment-laden language to indicate strong emotions. Therefore, the sentiment of the text can be interpreted more as \"neutral\" given the lack of explicit positive or negative emotional content.\n\nSo, the sentiment is: **neutral**."}
{"text": "sure", "res": "neutral"}
{"text": "nothing was fixed in the updates same error Unknown MySQL server host 'SQL_SERVER' (2)", "res": "The sentiment of the given software engineering text is \"negative\"."}
{"text": "On this page: https://github.com/gruntjs/grunt/blob/0.3-stable/docs/types_of_tasks.mdCheers!\"", "res": "Neutral"}
{"text": "Good catch. This is probably spammy and race-prone.", "res": "The sentiment of the given software engineering text is \"negative\"."}
{"text": "I still seem to get these all the time.", "res": "The sentiment of the given software engineering text is \"negative.\""}
{"text": "I think I found my mistake. The problem is that when you use the multiscan dialog of Paperwork, it always force the source to the first value that matches what looks like an ADF. I will fix that asap", "res": "The sentiment of the provided software engineering text is \"neutral\"."}
{"text": "something funny Y = ->p{->f{f[f]}[->g{p[->*n{g[g][*n]}]}]}ref:http://rosettacode.org/wiki/Y_combinator#Rubyhttps://gist.github.com/redraiment/6445345\"", "res": "To determine the sentiment of the provided software engineering text, we should consider the context and the elements present in the text. The text seems to contain code related to the Y combinator, along with a description that includes the phrase \"something funny.\" A reference URL is included, indicating additional information or context about the code.\n\n1. **Code Snippet**: The Y combinator is a well-known functional programming construct. The presence of code by itself doesn't convey sentiment.\n   \n2. **Emoticons and Contractions**: None are present.\n\n3. **URLs**: The URLs are not inherently positive or negative; they serve as references.\n\n4. **Phases/Context**: The phrase \"something funny\" could be interpreted as positive, as it suggests humor. \n\nConsidering these aspects, the sentiment of this text is likely more neutral or slightly positive due to the word \"funny.\" However, since there's not enough strong language or sentiment-laden commentary, it's safer to categorize it primarily as \"neutral.\"\n\nTherefore, the sentiment of the given software engineering text is \"neutral.\""}
{"text": "Just create a linear dungeon where user and enemies walk through each other.", "res": "The sentiment of the given software engineering text is \"neutral.\""}
{"text": "Could not load an SSH config at work today. Something is wrong with the param parsing.", "res": "Negative"}
{"text": "I tend to use `foo.must_be :blank?` for stuff like this. MiniTest::Spec will take any symbol with a `?` at the end and call that method on it and use the symbol for pretty error messages. So good things like `:valid?`, `:present?`, etc are all possible.", "res": "Positive"}
{"text": "s/~~are requiring/require/", "res": "Neutral"}
{"text": "Well, currently making a zip for Cydia is a no-brainer.  We basically just use the entire repo.  What I'm thinking we'll need to do instead is to create separate repos for each theme.  The icons repo will have iPad, iPhone and source icon images.  Then we'll have to have a build script that will compile only the iPad icons into the iPad theme and the iPhone icons into the iPhone theme. If we decide to go the iPad route @dreamnetSome GUI them subfoldersome-iphone-gui-control.pngthe-same-gui-control-but-the-ipad-version.pnginfo.iphone.plistinfo.ipad.plistThen we have the build script rename the plist files depending on which Glasklart theme we're building.  So in BOTH themes both the iPhone and iPad items would be in there but in the iPad version it would have the iPad plists and vice versa.\"", "res": "The sentiment of the provided software engineering text is \"neutral.\" The text mainly discusses technical procedures and ideas for handling theme files and scripts, without any overtly positive or negative expressions."}
{"text": "Make link to hasatypo.org actually 'hasatypo.org' and not the shortened link in the tweet", "res": "The sentiment of the provided software engineering text is \"neutral\"."}
{"text": "It is usefull for raw cell, where you can start on `diff --git`. End, I'm not sure.", "res": "The sentiment of the given software engineering text is \"neutral.\""}
{"text": "Instead of using 'h', perhaps we should use constants? Imho that would make the code more legible.", "res": "The sentiment of the provided software engineering text is \"neutral\"."}
{"text": "Add a \"Climate\" category? To include \"climate change\". Not a policy area listed in Natura 2000 but seems like a key area and is mention in MMO list of evidence areas.", "res": "Neutral"}
{"text": "Now still have 2 failed testcases with USE_TZ=True: ====================================================================== FAIL: test_answer_question (askbot.tests.post_model_tests.ThreadRenderCacheUpdateTests) ---------------------------------------------------------------------- Traceback (most recent call last):   File \"/home/hsn/code/askbot-devel/askbot/tests/post_model_tests.py\", line 563, in test_answer_question     self.assertTrue(thread.summary_html_cached())  # <<< make sure that caching backend is set up properly (i.e. it's not dummy) AssertionError: False is not true  ====================================================================== FAIL: test_view_count (askbot.tests.post_model_tests.ThreadRenderCacheUpdateTests) ---------------------------------------------------------------------- Traceback (most recent call last):   File \"/home/hsn/code/askbot-devel/askbot/tests/post_model_tests.py\", line 625, in test_view_count     self.assertEqual(html, thread.get_cached_summary_html()) AssertionError: u' <div class=\"short-summary\" id=\"question-1\">     <div class=\"counts\">       [truncated]... != u' <div class=\"short-summary\" id=\"question-1\">     <div class=\"counts\">       [truncated]... Diff is 1955 characters long. Set self.maxDiff to None to see it.  I don't know how to solve them!", "res": "The sentiment of the text is \"negative.\" The presence of words such as \"failed\" and the expression of frustration with \"I don't know how to solve them!\" suggest a negative sentiment."}
{"text": "the status displays branch name followed by remote, while the git command follows remote/branch name. It would be more consistent to also follow this. \"", "res": "The sentiment of the given software engineering text is \"negative\". The text expresses a suggestion for improvement, implying dissatisfaction with the current inconsistency."}
{"text": "Hi Mark, I have this week more time, will respond to your thread.", "res": "The sentiment of the provided software engineering text is \"neutral.\""}
{"text": "Yes, directly to master would do right now. Thanks very much @decanus\"", "res": "The sentiment of the given software engineering text is \"positive\"."}
